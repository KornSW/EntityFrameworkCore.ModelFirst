// <auto-generated />
using System;
using Demo.Persistence.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Demo.Migrations
{
    [DbContext(typeof(DemoDbContext))]
    partial class DemoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Demo.Persistence.ClassEntity", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EducationLevelYear")
                        .HasColumnType("int");

                    b.Property<string>("OfficialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PrimaryTeacherUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoomUid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Uid");

                    b.HasIndex("PrimaryTeacherUid");

                    b.HasIndex("RoomUid");

                    b.ToTable("mfdClasses");
                });

            modelBuilder.Entity("Demo.Persistence.EducationItemPictureEntity", b =>
                {
                    b.Property<Guid>("Uid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("PictureData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Uid");

                    b.ToTable("mfdEducationItemPictures");
                });

            modelBuilder.Entity("Demo.Persistence.EnducationItemEntity", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DedicatedToSubjectName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<short>("InventoryNumber")
                        .HasColumnType("smallint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Uid");

                    b.HasIndex("DedicatedToSubjectName");

                    b.ToTable("mfdEnducationItems");
                });

            modelBuilder.Entity("Demo.Persistence.LessonEntity", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("Begin")
                        .HasColumnType("time");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<decimal>("DurationHours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("EducatedClassUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OfficialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoomUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubjectOfficialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("TeacherUid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Uid");

                    b.HasIndex("EducatedClassUid");

                    b.HasIndex("RoomUid");

                    b.HasIndex("TeacherUid", "SubjectOfficialName");

                    b.ToTable("mfdLessons");
                });

            modelBuilder.Entity("Demo.Persistence.RoomEntity", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OfficialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Uid");

                    b.ToTable("mfdRooms");
                });

            modelBuilder.Entity("Demo.Persistence.StudentEntity", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScoolEntryYear")
                        .HasColumnType("int");

                    b.HasKey("Uid");

                    b.HasIndex("ClassUid");

                    b.ToTable("mfdStudents");
                });

            modelBuilder.Entity("Demo.Persistence.SubjectEntity", b =>
                {
                    b.Property<string>("OfficialName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("OfficialName");

                    b.ToTable("mfdSubjects");
                });

            modelBuilder.Entity("Demo.Persistence.SubjectTeachingEntity", b =>
                {
                    b.Property<Guid>("TeacherUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubjectOfficialName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TeacherUid", "SubjectOfficialName");

                    b.HasIndex("SubjectOfficialName");

                    b.ToTable("mfdSubjectTeachings");
                });

            modelBuilder.Entity("Demo.Persistence.TeacherEntity", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Uid");

                    b.ToTable("mfdTeachers");
                });

            modelBuilder.Entity("Demo.Persistence.TeachingRequiredItemEntity", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("RequiredEducationItemUid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubjectOfficialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("TeacherUid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Uid");

                    b.HasIndex("RequiredEducationItemUid");

                    b.HasIndex("TeacherUid", "SubjectOfficialName");

                    b.ToTable("mfdTeachingRequiredItems");
                });

            modelBuilder.Entity("Demo.Persistence.RoomRelatedEducationItemEntity", b =>
                {
                    b.HasBaseType("Demo.Persistence.EnducationItemEntity");

                    b.Property<Guid>("RoomUid")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("RoomUid");

                    b.ToTable("mfdEnducationItemsOfRoomRelatedEducationItem");
                });

            modelBuilder.Entity("Demo.Persistence.TeacherRelatedEducationItemEntity", b =>
                {
                    b.HasBaseType("Demo.Persistence.EnducationItemEntity");

                    b.Property<Guid>("TeacherUid")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("TeacherUid");

                    b.ToTable("mfdEnducationItemsOfTeacherRelatedEducationItem");
                });

            modelBuilder.Entity("Demo.Persistence.ClassEntity", b =>
                {
                    b.HasOne("Demo.Persistence.TeacherEntity", "PrimaryTeacher")
                        .WithMany("PrimaryClasses")
                        .HasForeignKey("PrimaryTeacherUid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Demo.Persistence.RoomEntity", "PrimaryRoom")
                        .WithMany("PrimaryClasses")
                        .HasForeignKey("RoomUid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("PrimaryRoom");

                    b.Navigation("PrimaryTeacher");
                });

            modelBuilder.Entity("Demo.Persistence.EducationItemPictureEntity", b =>
                {
                    b.HasOne("Demo.Persistence.EnducationItemEntity", "EnducationItem")
                        .WithOne("Picture")
                        .HasForeignKey("Demo.Persistence.EducationItemPictureEntity", "Uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnducationItem");
                });

            modelBuilder.Entity("Demo.Persistence.EnducationItemEntity", b =>
                {
                    b.HasOne("Demo.Persistence.SubjectEntity", "DedicatedToSubject")
                        .WithMany("EnducationItems")
                        .HasForeignKey("DedicatedToSubjectName")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("DedicatedToSubject");
                });

            modelBuilder.Entity("Demo.Persistence.LessonEntity", b =>
                {
                    b.HasOne("Demo.Persistence.ClassEntity", "EducatedClass")
                        .WithMany("ScheduledLessons")
                        .HasForeignKey("EducatedClassUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Demo.Persistence.RoomEntity", "Room")
                        .WithMany("ScheduledLessons")
                        .HasForeignKey("RoomUid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Demo.Persistence.SubjectTeachingEntity", "Teaching")
                        .WithMany("ScheduledLessons")
                        .HasForeignKey("TeacherUid", "SubjectOfficialName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EducatedClass");

                    b.Navigation("Room");

                    b.Navigation("Teaching");
                });

            modelBuilder.Entity("Demo.Persistence.StudentEntity", b =>
                {
                    b.HasOne("Demo.Persistence.ClassEntity", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("Demo.Persistence.SubjectTeachingEntity", b =>
                {
                    b.HasOne("Demo.Persistence.SubjectEntity", "Subject")
                        .WithMany("Teachings")
                        .HasForeignKey("SubjectOfficialName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Demo.Persistence.TeacherEntity", "Teacher")
                        .WithMany("Teachings")
                        .HasForeignKey("TeacherUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Demo.Persistence.TeachingRequiredItemEntity", b =>
                {
                    b.HasOne("Demo.Persistence.TeacherRelatedEducationItemEntity", "RequiredItem")
                        .WithMany("RequiredFor")
                        .HasForeignKey("RequiredEducationItemUid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Demo.Persistence.SubjectTeachingEntity", "Teaching")
                        .WithMany("RequiredItems")
                        .HasForeignKey("TeacherUid", "SubjectOfficialName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequiredItem");

                    b.Navigation("Teaching");
                });

            modelBuilder.Entity("Demo.Persistence.RoomRelatedEducationItemEntity", b =>
                {
                    b.HasOne("Demo.Persistence.RoomEntity", "Location")
                        .WithMany("EducationItems")
                        .HasForeignKey("RoomUid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Demo.Persistence.EnducationItemEntity", null)
                        .WithOne()
                        .HasForeignKey("Demo.Persistence.RoomRelatedEducationItemEntity", "Uid")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Demo.Persistence.TeacherRelatedEducationItemEntity", b =>
                {
                    b.HasOne("Demo.Persistence.TeacherEntity", "OwningTeacher")
                        .WithMany("OwnedEducationItems")
                        .HasForeignKey("TeacherUid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Demo.Persistence.EnducationItemEntity", null)
                        .WithOne()
                        .HasForeignKey("Demo.Persistence.TeacherRelatedEducationItemEntity", "Uid")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("OwningTeacher");
                });

            modelBuilder.Entity("Demo.Persistence.ClassEntity", b =>
                {
                    b.Navigation("ScheduledLessons");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Demo.Persistence.EnducationItemEntity", b =>
                {
                    b.Navigation("Picture");
                });

            modelBuilder.Entity("Demo.Persistence.RoomEntity", b =>
                {
                    b.Navigation("EducationItems");

                    b.Navigation("PrimaryClasses");

                    b.Navigation("ScheduledLessons");
                });

            modelBuilder.Entity("Demo.Persistence.SubjectEntity", b =>
                {
                    b.Navigation("EnducationItems");

                    b.Navigation("Teachings");
                });

            modelBuilder.Entity("Demo.Persistence.SubjectTeachingEntity", b =>
                {
                    b.Navigation("RequiredItems");

                    b.Navigation("ScheduledLessons");
                });

            modelBuilder.Entity("Demo.Persistence.TeacherEntity", b =>
                {
                    b.Navigation("OwnedEducationItems");

                    b.Navigation("PrimaryClasses");

                    b.Navigation("Teachings");
                });

            modelBuilder.Entity("Demo.Persistence.TeacherRelatedEducationItemEntity", b =>
                {
                    b.Navigation("RequiredFor");
                });
#pragma warning restore 612, 618
        }
    }
}
